server.port=8002

spring.profiles.active=dev
spring.mvc.static-path-pattern=/static/**
# 这是一个坑，这里应该设置的是路径而不是匹配
spring.resources.static-locations=classpath:/static

# clientRegistration 注册
# 可能内置了一些provider
spring.security.oauth2.client.registration.google.client-id=google-client-id
spring.security.oauth2.client.registration.google.client-secret=google-client-secret

# provider
spring.security.oauth2.client.provider.myauthorizeserver-auth-code.authorization-uri=http://auth-server:8001/oauth/authorize
spring.security.oauth2.client.provider.myauthorizeserver-auth-code.token-uri=http://auth-server:8001/oauth/token

# OAuth 2.0 client properties.
spring.security.oauth2.client.registration.ac.provider=myauthorizeserver-auth-code
spring.security.oauth2.client.registration.ac.client-id=stragory
spring.security.oauth2.client.registration.ac.client-secret=$2a$10$J9fGzwblYSR0TxeBNjtJC.wCyhN4cSnEHaEqYFQsdKVR7K5fWk0tu
spring.security.oauth2.client.registration.ac.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.ac.scope=all
spring.security.oauth2.client.registration.ac.redirect-uri=http://client-server:8002/oauth/token

spring.security.oauth2.client.provider.myauthorizeserver-implicit.authorization-uri=http://auth-server:8001/oauth/authorize
spring.security.oauth2.client.provider.myauthorizeserver-implicit.token-uri=http://auth-server:8001/oauth/token
spring.security.oauth2.client.registration.im.provider=myauthorizeserver-implicit
spring.security.oauth2.client.registration.im.client-id=SwordArtOnline
spring.security.oauth2.client.registration.im.client-secret=$2a$10$J9fGzwblYSR0TxeBNjtJC.wCyhN4cSnEHaEqYFQsdKVR7K5fWk0tu
spring.security.oauth2.client.registration.im.authorization-grant-type=implicit
spring.security.oauth2.client.registration.im.redirect-uri=http://client-server:8002/oauth/token

spring.security.oauth2.client.provider.qq.authorization-uri=https://graph.qq.com/oauth2.0/authorize
spring.security.oauth2.client.provider.qq.token-uri=https://graph.qq.com/oauth2.0/token
spring.security.oauth2.client.provider.qq.user-info-uri=https://graph.qq.com/user/get_user_info
spring.security.oauth2.client.provider.qq.user-info-authentication-method=get
spring.security.oauth2.client.provider.qq.user-name-attribute=nickname

spring.security.oauth2.client.registration.qq.provider=qq
spring.security.oauth2.client.registration.qq.client-id=101832748
spring.security.oauth2.client.registration.qq.client-secret=d12ec6b70a9e428aa0ea6c8d8f7e99db
spring.security.oauth2.client.registration.qq.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.qq.redirect-uri=http://client-server:8002/oauth/token
spring.security.oauth2.client.registration.qq.client-authentication-method=post

logging.group.web=DEBUG

# 为什么访问不了？？？who can tell me？？？
# https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id=101832748&redirect_uri=http://mangu178.xin/oauth/token&state=comeonbb

# 其实我不清楚的是如果java class改变会重载吗？
# The spring-boot-devtools module includes an embedded LiveReload server that can be used to trigger a browser refresh when a resource is changed. 官网说的是资源 不知道包不包括java类
# 我需要的是后台热更新而不是前台
spring.devtools.livereload.enabled=true

# spring mvc 配置
#spring.mvc

# sso配置
# 这个设置为这个的话就是使用授权模式
#security.oauth2.sso.login-path=http://localhost:8001/oauth/authorize?response_type=token&client_id=stragory&redirect_uri=http://localhost:8002/oauth/1&scope=all